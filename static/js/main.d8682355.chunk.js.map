{"version":3,"sources":["audios/move.mp3","audios/popup.mp3","components/Canvas.tsx","components/Game2048/store/types.ts","components/Game2048/store/TileMatrix.ts","components/Game2048/store/Matrix.ts","utils/index.ts","components/Game2048/store/reducer.ts","hooks/useEventCallback.ts","hooks/useCommittedRef.ts","components/Game2048/index.tsx","components/Game2048/store/actions.ts","serviceWorker.ts","index.tsx","App.tsx"],"names":["module","exports","__webpack_require__","p","STYLES","fillStyle","strokeStyle","lineWidth","textAlign","textBaseline","fontStyle","fontVariant","fontWeight","fontSize","fontFamily","setCanvasStyles","ctx","styles","font","concat","Object","keys","forEach","key","isCanvasText","node","draw","children","parentProps","React","Children","child","isValidElement","type","callName","mergedProps","objectSpread","props","x","y","isLayoutElement","column","dx","_child","w","dy","h","isTextElement","Canvas","call","text","fontFillStyle","fontStrokeStyle","Text","canvasStyles","other","objectWithoutProperties","canvasRef","useRef","getContext2d","useMemo","current","getContext","useEffect","canvas","width","height","clearRect","react_default","a","createElement","assign","ref","Layout","Rect","_props$x","_props$y","_props$w","_props$h","r","this","save","beginPath","moveTo","arcTo","rect","closePath","fill","stroke","restore","_props$x2","_props$y2","maxWidth","txt","toString","fillText","strokeText","ADD_TILE","LEFT","DOWN","RIGHT","UP","SET_BOARD_LENGTH","INITI","UNDO","TileMatrix","size","_this","tiles","arguments","length","undefined","classCallCheck","possibleConstructorReturn","getPrototypeOf","tile","value","emptyPositions","emptyPosition","Math","random","tileMatrix","esm_get","prototype","own","its","getScore","_this2","eachRow","moveRowToFront","_this3","moveRowToBack","newTiles","head","tail","prevValue","NaN","row","toConsumableArray","reverse","result","eachValue","Matrix","arg","argIsN","cols","origin","matrix","assert","positions","utils","handleKey","e","actions","handler","keyValue","i","_actions$i","slicedToArray","includes","preventDefault","window","localStorage","setItem","JSON","stringify","load","parse","getItem","LOCAL_STORAGE_KEY","HISTORY_LIMIT","getCellLength","boardLength","gup","computeTileMove","left","nowTileMatrix","score","moveToFront","_score","isRemovable","isEqual","getLeft","down","transposeMatrix","moveToBack","getDown","right","getRight","up","getUp","gameover","some","getGameover","computeMoveAction","state","tileMove","best","computeTileMoved","lock","initState","_ref","history","addCount","addTile","shift","computed","cellLength","reducer","action","newState","initialState","pop","prev","useEventCallback","fn","useCommittedRef","useCallback","apply","moveMp3","require","popupMp3","moveAudio","Audio","popupAudio","COLORS","2","4","8","16","32","64","128","256","512","1024","2048","4096","8192","cell","board","title","scoreNumber","scoreText","bestNumber","bestText","gameoverText","black","FONTSIZES","1","3","MAX","MIN","SCORE_HEIGHT","KEY","A","S","D","W","getBoardLength","Game2048","_useReducer","useReducer","lastHistory","innerWidth","getInitialState","_useReducer2","dispatch","timerRef","isLarger","style","scoreLayout","textHeight","textFontSize","numberFontSize","getScoreLayout","boardCells","getBoardCells","tileCells","fontIndex","map","getTileCells","handleMove","play","handleAddTile","clearTimeout","setTimeout","handleLeft","handleDown","handleRight","handleUp","handleUndo","handleNewGame","handleKeydown","addEventListener","removeEventListener","handleResize","className","components_Canvas","onClick","disabled","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d8682355.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/move.7d5eff42.mp3\";","module.exports = __webpack_public_path__ + \"static/media/popup.4af4d408.mp3\";","import React, { useEffect, useRef, useMemo } from 'react';\n\nexport type PropertyNames<T> = { [K in keyof T]: T[K] extends Function ? never : K }[keyof T];\n\nexport type Properties<T> = Pick<T, PropertyNames<T>>;\n\nexport interface CanvasStyles extends Partial<Properties<CanvasFillStrokeStyles & CanvasPathDrawingStyles & CanvasShadowStyles & CanvasTextDrawingStyles>> {\n  fontStyle?: 'normal' | 'italic' | 'oblique';\n  fontVariant?: 'normal' | 'small-caps';\n  fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n  fontSize?: number;\n  fontFamily?: string;\n  fontFillStyle?: CanvasFillStrokeStyles['fillStyle'];\n  fontStrokeStyle?: CanvasFillStrokeStyles['strokeStyle'];\n}\n\nexport interface CanvasBaseProps extends CanvasStyles {\n  x?: number;\n  y?: number;\n  w?: number;\n  h?: number;\n  children?: CanvasNode;\n}\n\n// const canvasStylesKey: Array<keyof CanvasStyles> = ['direction', 'fillStyle', 'font', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'shadowBlur', 'shadowColor', 'shadowOffsetX', 'shadowOffsetY', 'strokeStyle', 'textAlign', 'textBaseline'];\n\n// export function pick<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n//   return keys.reduce((result, key) => {\n//     result[key] = obj[key];\n//     return result;\n//   }, {} as Pick<T, K>);\n// }\n\nconst STYLES: CanvasStyles = {\n  fillStyle: 'rgba(0, 0, 0, 0)',\n  strokeStyle: 'rgba(0, 0, 0, 0)',\n  lineWidth: 0,\n  textAlign: 'start',\n  textBaseline: 'top',\n  fontStyle: 'normal',\n  fontVariant: 'normal',\n  fontWeight: 'normal',\n  fontSize: 16,\n  fontFamily: '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"',\n};\n\nfunction setCanvasStyles(ctx: CanvasRenderingContext2D, styles: CanvasStyles) {\n  styles.font = styles.font || `${styles.fontStyle || STYLES.fontStyle} ${styles.fontVariant || STYLES.fontVariant} ${styles.fontWeight || STYLES.fontWeight} ${styles.fontSize || STYLES.fontSize}px ${styles.fontFamily || STYLES.fontFamily}`;\n  Object.keys(styles).forEach(key => {\n    if (key in ctx && styles[key]) ctx[key] = styles[key];\n  });\n}\n\ninterface CanvasElementConstructor<P extends CanvasBaseProps> {\n  (props: P): React.ReactElement | null;\n  callName: string;\n}\n\ninterface CanvasElement<P extends CanvasBaseProps = CanvasBaseProps, T extends CanvasElementConstructor<P> = CanvasElementConstructor<P>> {\n  type: T;\n  props: P;\n  key: React.Key | null;\n}\n\ntype CanvasText = string | number;\n\ntype CanvasChild = CanvasElement | CanvasText;\n\ninterface CanvasNodeArray extends Array<CanvasNode> {}\n\ntype CanvasFragment = {} | CanvasNodeArray;\n\ntype CanvasNode = CanvasChild | CanvasFragment | boolean | null | undefined;\n\nfunction isCanvasText(node: CanvasNode): node is CanvasText {\n  return typeof node === 'string' || typeof node === 'number';\n}\n\nfunction isCanvasElement<P extends CanvasBaseProps>(node: CanvasNode): node is CanvasElement<P> {\n  return React.isValidElement(node) && !!node.type.callName;\n}\n\nfunction isLayoutElement(node: CanvasElement): node is CanvasElement<LayoutProps> {\n  return node.type.callName === 'Layout';\n}\n\nfunction isTextElement(node: CanvasElement): node is CanvasElement<TextProps> {\n  return node.type.callName === 'Text';\n}\n\nfunction draw(ctx: CanvasRenderingContext2D, children: CanvasNode, parentProps: CanvasBaseProps) {\n  React.Children.forEach(children, child => {\n    if (isCanvasElement(child)) {\n      const mergedProps = { ...parentProps, ...child.props };\n      mergedProps.x = parentProps.x! + (child.props.x || 0);\n      mergedProps.y = parentProps.y! + (child.props.y || 0);\n      if (isLayoutElement(child)) {\n        if (child.props.column) {\n          let dx = 0;\n          React.Children.forEach(child.props.children, _child => {\n            mergedProps.x! += dx;\n            dx = (_child.props.x || 0) + (_child.props.w || 0);\n            draw(ctx, _child, mergedProps);\n          });\n        } else {\n          let dy = 0;\n          React.Children.forEach(child.props.children, _child => {\n            mergedProps.y! += dy;\n            dy = (_child.props.y || 0) + (_child.props.h || 0);\n            draw(ctx, _child, mergedProps);\n          });\n        }\n      } else if (isTextElement(child)) {\n        draw(ctx, isCanvasText(child.props.text) ? child.props.text : child.props.children, mergedProps);\n      } else {\n        Canvas[child.type.callName].call(ctx, mergedProps);\n        draw(ctx, child.props.children, mergedProps);\n      }\n    } else if (isCanvasText(child)) {\n      const props = { ...parentProps, text: child };\n      if (parentProps.textAlign === 'center') props.x = (parentProps.x || 0) + (parentProps.w || 0) / 2;\n      if (parentProps.textBaseline === 'middle') props.y = (parentProps.y || 0) + (parentProps.h || 0) / 2;\n      if (parentProps.fontFillStyle) props.fillStyle = parentProps.fontFillStyle;\n      if (parentProps.fontStrokeStyle) props.strokeStyle = parentProps.fontStrokeStyle;\n      Canvas.Text.call(ctx, props);\n    }\n  });\n}\n\nexport interface CanvasProps extends React.CanvasHTMLAttributes<HTMLCanvasElement> {\n  children?: CanvasNode;\n  canvasStyles?: CanvasStyles;\n}\n\nfunction Canvas(props: CanvasProps) {\n  const { children, canvasStyles, ...other } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const getContext2d = useMemo(() => () => canvasRef.current && canvasRef.current.getContext('2d'), []);\n\n  useEffect(() => {\n    const ctx = getContext2d();\n    if (ctx) setCanvasStyles(ctx, { ...STYLES, ...canvasStyles });\n  }, [canvasStyles, getContext2d]);\n\n  useEffect(() => {\n    const ctx = getContext2d();\n    if (ctx) {\n      const w = ctx.canvas.width;\n      const h = ctx.canvas.height;\n      ctx.clearRect(0, 0, w, h);\n      draw(ctx, children, { x: 0, y: 0, w, h });\n    }\n  });\n  return <canvas ref={canvasRef} {...other} />;\n}\n\nexport interface LayoutProps extends CanvasBaseProps {\n  children: CanvasElement | CanvasElement[];\n  column?: boolean;\n}\n\nexport function Layout(this: CanvasRenderingContext2D, props: LayoutProps) {\n  return null;\n}\n\nLayout.callName = 'Layout';\nCanvas.Layout = Layout;\n\nexport interface RectProps extends CanvasBaseProps {\n  children?: CanvasNode;\n  r?: number;\n}\n\nexport function Rect(this: CanvasRenderingContext2D, props: RectProps) {\n  const { children, x = 0, y = 0, w = 0, h = 0, r, ...styles } = props;\n  const ctx = this;\n  ctx.save();\n  setCanvasStyles(ctx, styles);\n  ctx.beginPath();\n  if (r) {\n    ctx.moveTo(x + r, y);\n    ctx.arcTo(x + w, y, x + w, y + h, r);\n    ctx.arcTo(x + w, y + h, x, y + h, r);\n    ctx.arcTo(x, y + h, x, y, r);\n    ctx.arcTo(x, y, x + w, y, r);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n  ctx.closePath();\n  ctx.fill();\n  if (styles.lineWidth) ctx.stroke();\n  ctx.restore();\n  return null;\n};\n\nRect.callName = 'Rect';\nCanvas.Rect = Rect;\n\nexport interface TextProps extends CanvasBaseProps {\n  children?: CanvasText;\n  text?: CanvasText;\n  maxWidth?: number;\n}\n\nexport function Text(this: CanvasRenderingContext2D, props: TextProps) {\n  const { children, text, x = 0, y = 0, maxWidth, ...styles } = props;\n  const ctx = this;\n  const txt = isCanvasText(text) ? text.toString() : isCanvasText(children) ? children.toString() : '';\n  ctx.save();\n  setCanvasStyles(ctx, styles);\n  ctx.fillText(txt, x, y, maxWidth);\n  if (styles.lineWidth) ctx.strokeText(txt, x, y, maxWidth);\n  ctx.restore();\n  return null;\n}\n\nText.callName = 'Text';\nCanvas.Text = Text;\n\nexport default Canvas;\n","import TileMatrix, { Tile } from './TileMatrix';\n\nexport const ADD_TILE = 'ADD_TILE';\nexport const LEFT = 'LEFT';\nexport const DOWN = 'DOWN';\nexport const RIGHT = 'RIGHT';\nexport const UP = 'UP';\nexport const SET_BOARD_LENGTH = 'SET_BOARD_LENGTH';\nexport const INITI = 'INITI';\nexport const UNDO = 'UNDO';\n\nexport interface HistoryState {\n  score: number;\n  best: number;\n  tiles: Tile[];\n}\n\nexport interface InitialState extends HistoryState {\n  size: number;\n  gup: number;\n  boardLength: number;\n  history: HistoryState[];\n}\n\nexport interface State extends InitialState {\n  tileMatrix: TileMatrix;\n  cellLength: number;\n  left: TileMove;\n  right: TileMove;\n  up: TileMove;\n  down: TileMove;\n  gameover: boolean;\n  lock: boolean;\n}\n\nexport interface TileMove {\n  isRemovable: boolean;\n  score: number;\n  tileMatrix: TileMatrix;\n}\n\ninterface AddTileAction {\n  type: typeof ADD_TILE;\n  addCount: number;\n}\n\ninterface LeftAction {\n  type: typeof LEFT;\n}\n\ninterface DownAction {\n  type: typeof DOWN;\n}\n\ninterface RightAction {\n  type: typeof RIGHT;\n}\n\ninterface UPAction {\n  type: typeof UP;\n}\n\ninterface SetBoardLengthAction {\n  type: typeof SET_BOARD_LENGTH;\n  boardLength: number;\n}\n\ninterface InitiAction {\n  type: typeof INITI;\n  initialState: InitialState;\n}\n\ninterface UndoAction {\n  type: typeof UNDO;\n}\n\nexport type ActionTypes =\n  | AddTileAction\n  | LeftAction\n  | DownAction\n  | RightAction\n  | UPAction\n  | SetBoardLengthAction\n  | InitiAction\n  | UndoAction;\n","import Matrix from './Matrix';\n\nexport interface Tile {\n  value: number;\n  x: number;\n  y: number;\n}\n\nexport default class TileMatrix extends Matrix<Tile | null> {\n  constructor(size: number, tiles: Tile[] = []) {\n    super(size);\n    tiles.forEach(tile => {\n      this.value[tile.y][tile.x] = tile;\n    });\n  }\n\n  get tiles(): Tile[] {\n    const result: Tile[] = [];\n    this.value.forEach((eachRow, y) => eachRow.forEach((eachValue, x) => {\n      if (eachValue !== null) result[result.length] = { ...eachValue, y, x };\n    }));\n    return result;\n  }\n\n  addTile(): boolean {\n    const emptyPositions = this.emptyPositions;\n    const length = emptyPositions.length;\n    if (!length) return false;\n    const emptyPosition = emptyPositions[Math.random() * length | 0];\n    const { x, y } = emptyPosition;\n    this.value[y][x] = { y, x, value: Math.random() > 0.1 ? 2 : 4 };\n    return true;\n  }\n\n  isEqual(tileMatrix: TileMatrix): boolean {\n    return super.isEqual(tileMatrix, (own, its) => {\n      if (own !== null && its !== null) return own.value !== its.value;\n      return own !== its;\n    });\n  }\n\n  moveToFront(getScore: (score: number) => void): void {\n    this.value.forEach((eachRow, y) => {\n      this.value[y] = this.moveRowToFront(eachRow, getScore);\n    });\n  }\n\n  moveToBack(getScore: (score: number) => void): void {\n    this.value.forEach((eachRow, y) => {\n      this.value[y] = this.moveRowToBack(eachRow, getScore);\n    });\n  }\n\n  private moveRowToFront(tiles: Array<Tile | null>, getScore: (score: number) => void): Array<Tile | null> {\n    const newTiles: Array<Tile | null> = [];\n    let head = 0;\n    let tail = tiles.length - 1;\n    let prevValue = NaN;\n    tiles.forEach(tile => {\n      if (tile !== null) {\n        if (prevValue === tile.value) {\n          getScore(tile.value * 2);\n          newTiles[head - 1] = { ...tile, value: tile.value * 2 };\n          newTiles[tail--] = null;\n          prevValue = NaN;\n        } else {\n          newTiles[head++] = { ...tile };\n          prevValue = tile.value;\n        }\n      } else {\n        newTiles[tail--] = null;\n      }\n    });\n    return newTiles;\n  }\n\n  private moveRowToBack(row: Array<Tile | null>, getScore: (score: number) => void): Array<Tile | null> {\n    return this.moveRowToFront([...row].reverse(), getScore).reverse();\n  }\n}\n","interface Position {\n  x: number;\n  y: number;\n}\n\nexport default class Matrix<T> {\n  value: T[][];\n  size: number;\n\n  constructor(size: number)\n  constructor(likeMatrix: T[][])\n  constructor(arg: number | T[][]) {\n    const argIsN = typeof arg === 'number';\n    const size = argIsN ? (arg as number) : (arg as T[][]).length;\n    this.size = size;\n    this.value = [];\n    for (let y = 0; y < size; y++) {\n      const cols: T[] = [];\n      for (let x = 0; x < size; x++) {\n        cols[x] = argIsN ? null : arg[y][x];\n      }\n      this.value[y] = cols;\n    }\n  }\n\n  get emptyPositions(): Position[] {\n    const positions: Position[] = [];\n    this.value.forEach((eachRow, y) => eachRow.forEach((eachValue, x) => {\n      if (eachValue === null) positions[positions.length] = { y, x };\n    }));\n    return positions;\n  }\n\n  transposeMatrix(): void {\n    const origin = new Matrix<T>(this.value);\n    this.value.forEach((eachRow, row) => eachRow.forEach((eachValue, column) => {\n      this.value[column][row] = origin.value[row][column];\n    }));\n  }\n\n  isEqual(matrix: Matrix<T>, assert = (own: T, its: T) => own !== its): boolean {\n    const size = matrix.size;\n    if (this.size !== size) return false;\n    for (let y = 0; y < size; y++) {\n      for (let x = 0; x < size; x++) {\n        if (assert(this.value[y][x], matrix.value[y][x])) return false;\n      }\n    }\n    return true;\n  }\n}\n","export type Action<T> = [T[], (e: KeyboardEvent) => void];\n\nexport const utils = {\n  handleKey<K extends keyof KeyboardEvent = 'keyCode'>(e: KeyboardEvent, actions: Array<Action<KeyboardEvent[K]>>, key: K = 'keyCode' as any) {\n    const keyValue = e[key];\n    let keys, handler;\n    for (let i = 0, length = actions.length; i < length; i++) {\n      [keys, handler] = actions[i];\n      if (keys.includes(keyValue)) {\n        handler(e);\n        e.preventDefault();\n        return;\n      }\n    }\n  },\n  save(key: string, value: any) {\n    if (!window.localStorage) return false;\n    window.localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  },\n  load<T = any>(key: string): false | T {\n    if (!window.localStorage) return false;\n    return JSON.parse(window.localStorage.getItem(key)!);\n  },\n};\n","import {\n  ADD_TILE,\n  LEFT,\n  DOWN,\n  RIGHT,\n  UP,\n  SET_BOARD_LENGTH,\n  INITI,\n  UNDO,\n  ActionTypes,\n  InitialState,\n  State,\n  TileMove,\n} from './types';\nimport TileMatrix from './TileMatrix';\nimport { utils } from 'utils';\n\nexport const LOCAL_STORAGE_KEY = 'GAME2048';\nconst HISTORY_LIMIT = 10;\n\nfunction getLeft(nowTileMatrix: TileMatrix): TileMove {\n  const tileMatrix = new TileMatrix(nowTileMatrix.size, nowTileMatrix.tiles);\n  let score = 0;\n  tileMatrix.moveToFront(_score => score += _score);\n  return {\n    isRemovable: !nowTileMatrix.isEqual(tileMatrix),\n    score,\n    tileMatrix,\n  };\n}\n\nfunction getDown(nowTileMatrix: TileMatrix): TileMove {\n  const tileMatrix = new TileMatrix(nowTileMatrix.size, nowTileMatrix.tiles);\n  let score = 0;\n  tileMatrix.transposeMatrix();\n  tileMatrix.moveToBack(_score => score += _score);\n  tileMatrix.transposeMatrix();\n  return {\n    isRemovable: !nowTileMatrix.isEqual(tileMatrix),\n    score,\n    tileMatrix,\n  };\n}\n\nfunction getRight(nowTileMatrix: TileMatrix): TileMove {\n  const tileMatrix = new TileMatrix(nowTileMatrix.size, nowTileMatrix.tiles);\n  let score = 0;\n  tileMatrix.moveToBack(_score => score += _score);\n  return {\n    isRemovable: !nowTileMatrix.isEqual(tileMatrix),\n    score,\n    tileMatrix,\n  };\n}\n\nfunction getUp(nowTileMatrix: TileMatrix): TileMove {\n  const tileMatrix = new TileMatrix(nowTileMatrix.size, nowTileMatrix.tiles);\n  let score = 0;\n  tileMatrix.transposeMatrix();\n  tileMatrix.moveToFront(_score => score += _score);\n  tileMatrix.transposeMatrix();\n  return {\n    isRemovable: !nowTileMatrix.isEqual(tileMatrix),\n    score,\n    tileMatrix,\n  };\n}\n\nfunction getGameover(tileMatrix: TileMatrix, left: TileMove, down: TileMove, right: TileMove, up: TileMove): boolean {\n  const existEmpty = tileMatrix.value.some((eachRow) => eachRow.some((eachValue) => eachValue === null));\n  return !(existEmpty || left.isRemovable || down.isRemovable || right.isRemovable || up.isRemovable);\n}\n\nfunction getCellLength(boardLength: number, size: number, gup: number) {\n  return (boardLength - (size + 1) * gup) / size;\n}\n\nfunction computeTileMove(tileMatrix: TileMatrix) {\n  const left = getLeft(tileMatrix);\n  const down = getDown(tileMatrix);\n  const right = getRight(tileMatrix);\n  const up = getUp(tileMatrix);\n  const gameover = getGameover(tileMatrix, left, down, right, up);\n  return {\n    tiles: tileMatrix.tiles,\n    left,\n    down,\n    right,\n    up,\n    gameover,\n  };\n}\n\nfunction computeTileMoved(state: State, tileMove: TileMove) {\n  const score = state.score + tileMove.score;\n  const best = score < state.best ? state.best : score;\n  return {\n    tileMatrix: tileMove.tileMatrix,\n    tiles: tileMove.tileMatrix.tiles,\n    score,\n    best,\n  };\n}\n\nfunction computeMoveAction(state: State, tileMove: TileMove) {\n  return {\n    ...state,\n    ...computeTileMoved(state, tileMove),\n    lock: true,\n  };\n}\n\nexport function initState({ size, gup, boardLength, score, best, tiles, history }: InitialState): State {\n  const tileMatrix = new TileMatrix(size, tiles);\n  if (tiles.length === 0) {\n    let addCount = 2;\n    while (addCount-- > 0) if (!tileMatrix.addTile()) break;\n    history[history.length] = { score, best, tiles: tileMatrix.tiles };\n    if (history.length > HISTORY_LIMIT) history.shift();\n    utils.save(LOCAL_STORAGE_KEY, history);\n  }\n  const computed = computeTileMove(tileMatrix);\n  return {\n    size,\n    gup,\n    boardLength,\n    score,\n    best,\n    cellLength: getCellLength(boardLength, size, gup),\n    tileMatrix,\n    lock: false,\n    history,\n    ...computed,\n  };\n}\n\nexport function reducer(state: State, action: ActionTypes): State {\n  switch (action.type) {\n    case ADD_TILE:\n      let addCount = action.addCount;\n      while (addCount-- > 0) if (!state.tileMatrix.addTile()) break;\n      const newState = {\n        ...state,\n        ...computeTileMove(state.tileMatrix),\n        lock: false,\n      };\n      newState.history[newState.history.length] = { score: newState.score, best: newState.best, tiles: [...newState.tiles] };\n      if (newState.history.length > HISTORY_LIMIT) newState.history.shift();\n      utils.save(LOCAL_STORAGE_KEY, state.history);\n      return newState;\n    case LEFT:\n      return computeMoveAction(state, state.left);\n    case DOWN:\n      return computeMoveAction(state, state.down);\n    case RIGHT:\n      return computeMoveAction(state, state.right);\n    case UP:\n      return computeMoveAction(state, state.up);\n    case SET_BOARD_LENGTH:\n      const boardLength = action.boardLength;\n      return {\n        ...state,\n        boardLength,\n        cellLength: getCellLength(boardLength, state.size, state.gup),\n      };\n    case INITI:\n      return initState(action.initialState);\n    case UNDO:\n      state.history.pop();\n      utils.save(LOCAL_STORAGE_KEY, state.history);\n      const prev = state.history[state.history.length - 1];\n      return initState({ ...state, ...prev });\n    default:\n      return state;\n  }\n}\n","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\n\ntype Func = (...args: any[]) => any;\n\n/** https://github.com/react-restart/hooks */\nexport default function useEventCallback<T extends Func>(fn?: T): T {\n  const ref = useCommittedRef(fn);\n  return useCallback((...args: any[]) => {\n    return ref.current && ref.current(...args);\n  }, [ref]) as any;\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * https://github.com/react-restart/hooks\n *\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nexport default function useCommittedRef<T>(value: T): React.MutableRefObject<T> {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n};\n","import React, { useReducer, useRef, useMemo, useCallback, useEffect } from 'react';\nimport Canvas, { Layout, Rect, Text } from '../Canvas';\nimport { InitialState, HistoryState, ActionTypes } from './store/types';\nimport { addTile, moveLeft, moveDown, moveRight, moveUp, setBoardLength, init, undo } from './store/actions';\nimport { reducer, initState, LOCAL_STORAGE_KEY } from './store/reducer';\nimport { Tile } from './store/TileMatrix';\nimport useEventCallback from 'hooks/useEventCallback';\nimport { utils } from 'utils';\n\nconst moveMp3 = require('../../audios/move.mp3') as string;\nconst popupMp3 = require('../../audios/popup.mp3') as string;\n\nconst moveAudio = new Audio(moveMp3);\nconst popupAudio = new Audio(popupMp3);\n\nconst COLORS = {\n  2: '#fff9c4',\n  4: '#ffe082',\n  8: '#ffb74d',\n  16: '#ffab91',\n  32: '#ef9a9a',\n  64: '#f06292',\n  128: '#ab47bc',\n  256: '#9575cd',\n  512: '#0091ea',\n  1024: '#00b8d4',\n  2048: '#00bfa5',\n  4096: '#00c853',\n  8192: '#aeea00',\n  cell: '#d7ccc8',\n  board: '#bcaaa4',\n  title: '#0091ea',\n  score: '#ec407a',\n  scoreNumber: '#f1f8e9',\n  scoreText: '#efebe9',\n  best: '#ff5722',\n  bestNumber: '#f1f8e9',\n  bestText: '#efebe9',\n  gameover: '#efebe9aa',\n  gameoverText: '#795548',\n  black: '#212121',\n};\n\nconst FONTSIZES = {\n  1: [34, 42] as const,\n  2: [30, 36] as const,\n  3: [26, 34] as const,\n  4: [22, 32] as const,\n};\n\nconst MAX = 640;\nconst MIN = 320;\nconst SCORE_HEIGHT = 64;\n// const FRAME_TIME = 16.7;\n\nconst KEY = {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  A: 65,\n  S: 83,\n  D: 68,\n  W: 87,\n};\n\nfunction getBoardLength(gup: number, width: number) {\n  return (width > MAX ? MAX : width < MIN ? MIN : width) - 2 * gup;\n}\n\nfunction getInitialState(): InitialState {\n  const gup = 8,\n        history = utils.load<HistoryState[]>(LOCAL_STORAGE_KEY) || [];\n  let score = 0,\n      best = 0,\n      tiles: Tile[] = [];\n  if (history.length) {\n    const lastHistory = history[history.length - 1];\n    tiles = lastHistory.tiles;\n    score = lastHistory.score;\n    best = lastHistory.best;\n  }\n  return {\n    size: 4,\n    gup,\n    boardLength: getBoardLength(gup, window.innerWidth),\n    score,\n    best,\n    tiles,\n    history,\n  };\n}\n\nfunction getScoreLayout(height: number, gup: number, boardLength: number, score: number, best: number, isLarger: boolean) {\n  const textHeight = height / 2.5;\n  const textFontSize = isLarger ? 16 : 12;\n  const numberFontSize = textFontSize * 2;\n  return (\n    <Layout column h={height + 2 * gup}>\n      <Text text=\"2048\" w={boardLength / 2} h={height + 2 * gup} fontSize={height / 4 * 3} fillStyle={COLORS.title} fontWeight=\"bold\" textAlign=\"center\" textBaseline=\"middle\" />\n      <Rect x={gup} y={gup} w={boardLength / 4 - gup} h={height} r={gup / 2} fillStyle={COLORS.score} fontWeight=\"bold\" textAlign=\"center\" textBaseline=\"middle\">\n        <Text text=\"SCORE\" h={textHeight} fontSize={textFontSize} fillStyle={COLORS.scoreText} />\n        <Text text={score} y={textHeight} h={height - textHeight} fontSize={numberFontSize} fillStyle={COLORS.scoreNumber} />\n      </Rect>\n      <Rect x={gup} y={gup} w={boardLength / 4 - gup} h={height} r={gup / 2} fillStyle={COLORS.best} fontWeight=\"bold\" textAlign=\"center\" textBaseline=\"middle\">\n        <Text text=\"BEST\" h={textHeight} fontSize={textFontSize} fillStyle={COLORS.bestText} />\n        <Text text={best} y={textHeight} h={height - textHeight} fontSize={numberFontSize} fillStyle={COLORS.bestNumber} />\n      </Rect>\n    </Layout>\n  );\n}\n\nfunction getBoardCells(size: number, gup:number, cellLength: number) {\n  const result = [];\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < size; x++) {\n      result[result.length] = (\n        <Rect\n          key={y + '/' + x}\n          x={x * (cellLength + gup) + gup}\n          y={y * (cellLength + gup) + gup}\n          w={cellLength}\n          h={cellLength}\n          r={gup / 2}\n          fillStyle={COLORS.cell}\n        />\n      );\n    }\n  }\n  return result;\n}\n\nfunction getTileCells(tiles: Tile[], gup: number, cellLength: number, isLarger: boolean) {\n  const fontIndex = isLarger ? 1 : 0;\n  // tiles = [];\n  // let v = 2;\n  // for (let r = 0; r < 4; r++) {\n  //   for (let c = 0; c < 4; c++) {\n  //     tiles[tiles.length] = { x: c, y: r, value: v };\n  //     v *= 2;\n  //     if (v > 8192) v = 2;\n  //   }\n  // }\n  return tiles.map(({ x, y, value }, i) => (\n    <Rect\n      key={'tile' + i}\n      x={x * (cellLength + gup) + gup}\n      y={y * (cellLength + gup) + gup}\n      w={cellLength}\n      h={cellLength}\n      r={gup / 2}\n      fillStyle={COLORS[value]}\n      fontFillStyle={COLORS.black}\n      fontSize={FONTSIZES[value.toString().length][fontIndex]}\n      fontWeight=\"bold\"\n      textAlign=\"center\"\n      textBaseline=\"middle\"\n    >\n      {value}\n    </Rect>\n  ));\n}\n\nexport default function Game2048() {\n  const [state, dispatch] = useReducer(reducer, getInitialState(), initState);\n  const { size, gup, boardLength, cellLength, score, best, tiles, left, down, right, up, gameover, lock, history } = state;\n\n  const timerRef = useRef<number>();\n  const isLarger = boardLength > ((MAX + MIN) / 2) - gup;\n\n  const style = useMemo(() => ({ width: boardLength }), [boardLength]);\n  const scoreLayout = useMemo(() => {\n    return getScoreLayout(SCORE_HEIGHT, gup, boardLength, score, best, isLarger);\n  }, [score, best, boardLength, gup, isLarger]);\n  const boardCells = useMemo(() => {\n    return getBoardCells(size, gup, cellLength);\n  }, [cellLength, gup, size]);\n  const tileCells = useMemo(() => {\n    return getTileCells(tiles, gup, cellLength, isLarger);\n  }, [tiles, cellLength, gup, isLarger]);\n\n  const handleMove = useCallback((action: ActionTypes) => {\n    dispatch(action);\n    moveAudio.play();\n  }, []);\n  const handleAddTile = useCallback(() => {\n    window.clearTimeout(timerRef.current);\n    timerRef.current = window.setTimeout(() => {\n      dispatch(addTile());\n      popupAudio.play();\n    }, 255);\n  }, []);\n  const handleLeft = useEventCallback(() => {\n    if (!lock && left.isRemovable) {\n      handleMove(moveLeft());\n      handleAddTile();\n    }\n  });\n  const handleDown = useEventCallback(() => {\n    if (!lock && down.isRemovable) {\n      handleMove(moveDown());\n      handleAddTile();\n    }\n  });\n  const handleRight = useEventCallback(() => {\n    if (!lock && right.isRemovable) {\n      handleMove(moveRight());\n      handleAddTile();\n    }\n  });\n  const handleUp = useEventCallback(() => {\n    if (!lock && up.isRemovable) {\n      handleMove(moveUp());\n      handleAddTile();\n    }\n  });\n  const handleUndo = useEventCallback(() => {\n    if (!lock && history.length > 1) {\n      dispatch(undo());\n    }\n  });\n  const handleNewGame = useEventCallback(() => {\n    dispatch(init({ size, gup, boardLength, best, score: 0, tiles: [], history }));\n  });\n\n  useEffect(() => {\n    const handleKeydown = (e: KeyboardEvent) => {\n      utils.handleKey(e, [\n        [[KEY.LEFT, KEY.A], handleLeft],\n        [[KEY.DOWN, KEY.S], handleDown],\n        [[KEY.RIGHT, KEY.D], handleRight],\n        [[KEY.UP, KEY.W], handleUp]\n      ]);\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => dispatch(setBoardLength(getBoardLength(gup, window.innerWidth)));\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [gup]);\n\n  useEffect(() => () => window.clearTimeout(timerRef.current), []);\n\n  return (\n    <div className=\"center\" style={style}>\n      <Canvas width={boardLength} height={boardLength + SCORE_HEIGHT + 3 * gup}>\n        <Layout>\n          {scoreLayout}\n          <Rect x={0} y={0} w={boardLength} h={boardLength} r={gup / 2} fillStyle={COLORS.board}>\n            {boardCells}\n            {tileCells}\n            {gameover && (\n              <Rect\n                key=\"gameover\"\n                x={0}\n                y={0}\n                w={boardLength}\n                h={boardLength}\n                r={gup / 2}\n                fillStyle={COLORS.gameover}\n                fontFillStyle={COLORS.gameoverText}\n                fontSize={boardLength / 8}\n                fontWeight=\"bold\"\n                textAlign=\"center\"\n                textBaseline=\"middle\"\n              >\n                Game over!\n              </Rect>\n            )}\n          </Rect>\n        </Layout>\n      </Canvas>\n      <div className=\"control\">\n        <div className=\"btn-group\">\n          <button className=\"btn\" onClick={handleNewGame}>New Game</button>\n          <button className=\"btn\" onClick={handleUndo} disabled={lock || history.length <= 1}>Undo</button>\n        </div>\n        <div className=\"arraw-group\">\n          <div>\n            <button className=\"btn\" disabled={lock || !up.isRemovable} onClick={handleUp}>\n              <span className=\"iconfont\">&#xe7ed;</span>\n            </button>\n          </div>\n          <div>\n            <button className=\"btn\" disabled={lock || !left.isRemovable} onClick={handleLeft}>\n              <span className=\"iconfont\">&#xe7ec;</span>\n            </button>\n            <button className=\"btn\" disabled={lock || !down.isRemovable} onClick={handleDown}>\n              <span className=\"iconfont\">&#xe7ee;</span>\n            </button>\n            <button className=\"btn\" disabled={lock || !right.isRemovable} onClick={handleRight}>\n              <span className=\"iconfont\">&#xe7eb;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { ADD_TILE, LEFT, DOWN, RIGHT, UP, SET_BOARD_LENGTH, INITI, InitialState, ActionTypes, UNDO } from './types';\n\nexport function addTile(addCount = 1): ActionTypes {\n  return { type: ADD_TILE, addCount };\n}\n\nexport function moveLeft(): ActionTypes {\n  return { type: LEFT };\n}\n\nexport function moveDown(): ActionTypes {\n  return { type: DOWN };\n}\n\nexport function moveRight(): ActionTypes {\n  return { type: RIGHT };\n}\n\nexport function moveUp(): ActionTypes {\n  return { type: UP };\n}\n\nexport function setBoardLength(boardLength: number): ActionTypes {\n  return { type: SET_BOARD_LENGTH, boardLength };\n}\n\nexport function init(initialState: InitialState): ActionTypes {\n  return { type: INITI, initialState };\n}\n\nexport function undo(): ActionTypes {\n  return { type: UNDO };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react';\nimport Game2048 from './components/Game2048';\n\nexport default function App() {\n  return (\n    <Game2048 />\n  );\n}\n"],"sourceRoot":""}